generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BookingStatus {
  pending
  confirmed
  cancelled
}

model Tenant {
  id        String     @id @default(uuid())
  name      String
  slug      String     @unique
  createdAt DateTime   @default(now())

  settings  Settings?
  customers Customer[]
  bookings  Booking[]
}

model Customer {
  id        String   @id @default(uuid())
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId  String
  firstName String
  lastName  String
  phone     String?
  email     String
  createdAt DateTime @default(now())

  bookings Booking[]

  @@unique([email, tenantId], name: "email_tenantId")
}

model Settings {
  id            String   @id @default(uuid())
  tenant        Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId      String   @unique
  businessName  String
  email         String
  phone         String?
  address       String?
  notes         String?
  businessHours Json
  holidays      Json
  updatedAt     DateTime @updatedAt
}

model Booking {
  id         String        @id @default(uuid())
  tenant     Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId   String
  customer   Customer      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String
  date       String
  startTime  String
  endTime    String
  status     BookingStatus @default(pending)
  notes      String?
  createdAt  DateTime      @default(now())

  @@index([tenantId, date])
  @@index([tenantId, status])
}
