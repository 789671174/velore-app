"use client"; import React,{useEffect,useState} from "react"; type Slot={time:string;disabled?:boolean}; export default function ClientPage(){const [dark,setDark]=useState(false); const [date,setDate]=useState(()=>new Date().toISOString().slice(0,10)); const [firstName,setFirstName]=useState(""); const [lastName,setLastName]=useState(""); const [email,setEmail]=useState(""); const [phone,setPhone]=useState(""); const [selectedTime,setSelectedTime]=useState<string|null>(null); const [slots,setSlots]=useState<Slot[]>([]); const [loading,setLoading]=useState(false); const [companyName,setCompanyName]=useState("Velora"); const [logo,setLogo]=useState<string|undefined>(undefined); async function refreshSlots(d:string){setLoading(true); const res=await fetch(`/api/slots?date=${d}`); const data=await res.json(); setSlots(data); setLoading(false);} async function loadSettings(){const res=await fetch("/api/settings"); const s=await res.json(); setCompanyName(s.name||"Velora"); setLogo(s.logoDataUrl);} useEffect(()=>{loadSettings();},[]); useEffect(()=>{refreshSlots(date);},[date]); const submit=async()=>{if(!selectedTime) return alert("Bitte Uhrzeit wählen."); if(!firstName||!lastName||!email) return alert("Bitte alle Pflichtfelder ausfüllen."); const res=await fetch("/api/bookings",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({firstName,lastName,email,phone,date,time:selectedTime})}); if(!res.ok) return alert("Fehler beim Senden."); const b=await res.json(); alert(`Anfrage gesendet! #${b.id}`); setSelectedTime(null); refreshSlots(date);}; return(<div className={dark?"bg-neutral-900 text-neutral-100 min-h-screen":"bg-neutral-50 text-neutral-900 min-h-screen"}><div className="max-w-3xl mx-auto p-8"><div className="flex items-center justify-between mb-6"><div className="flex items-center gap-3">{logo?<img src={logo} className="w-8 h-8 rounded" alt="Logo"/>:<div className="w-8 h-8 rounded bg-white/20 border"/>}<h1 className="text-2xl font-bold">{companyName} – Termin buchen</h1></div><button onClick={()=>setDark(d=>!d)} className="rounded-xl border px-3 py-1">{dark?"Light":"Dark"}</button></div><div className={"rounded-2xl p-6 border "+(dark?"bg-neutral-800 border-neutral-700":"bg-white border-neutral-200") }><div className="grid grid-cols-1 md:grid-cols-2 gap-3"><div><label className="text-sm">Vorname</label><input className="mt-1 w-full rounded-xl border px-3 py-2 bg-transparent" value={firstName} onChange={e=>setFirstName(e.target.value)} /></div><div><label className="text-sm">Nachname</label><input className="mt-1 w-full rounded-xl border px-3 py-2 bg-transparent" value={lastName} onChange={e=>setLastName(e.target.value)} /></div><div className="md:col-span-2"><label className="text-sm">E‑Mail</label><input type="email" className="mt-1 w-full rounded-xl border px-3 py-2 bg-transparent" value={email} onChange={e=>setEmail(e.target.value)} /></div><div className="md:col-span-2"><label className="text-sm">Telefon (optional)</label><input className="mt-1 w-full rounded-xl border px-3 py-2 bg-transparent" value={phone} onChange={e=>setPhone(e.target.value)} /></div></div><div className="mt-4 grid grid-cols-1 md:grid-cols-3 gap-4"><div><label className="text-sm">Datum</label><input type="date" className="mt-1 w-full rounded-xl border px-3 py-2 bg-transparent" value={date} onChange={e=>setDate(e.target.value)} /></div><div className="md:col-span-2"><label className="text-sm">Uhrzeit auswählen</label>{loading?<p className="text-sm opacity-70 mt-1">Lade Slots…</p>:(<div className="mt-1 grid grid-cols-4 gap-2">{slots.length===0&&<p className="text-sm opacity-70 col-span-4">Keine Slots verfügbar.</p>}{slots.map((s:Slot)=>(<button key={s.time} disabled={s.disabled} onClick={()=>setSelectedTime(s.time)} className={`px-3 py-2 rounded-xl border ${s.disabled?"opacity-40 cursor-not-allowed":""} ${selectedTime===s.time?"ring-2 ring-blue-500":""}`}>{s.time}</button>))}</div>)}</div></div><div className="mt-6 flex justify-end"><button onClick={submit} className="rounded-xl border px-4 py-2">Termin anfragen</button></div></div><p className="mt-6 text-xs opacity-70">DB: Prisma (SQLite lokal / Postgres in Prod). E‑Mail: SMTP via Nodemailer.</p></div></div>); }